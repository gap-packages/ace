
Hi Greg,

  thanks for your comments.  It is (currently) my intention to upgrade ACE
from 3.000 to 3.001 over the course of the next year.  In the absence of
serious errors, this will consist in the main of tidying things up and
responding to feedback from users.  Also, the documentation is in need of
significant work; many of the points you raise should be (will be?) covered
there.  Since the work is boring, and never-ending, it'll probably be done
in bursts.  I'll be posting updated copied of the software & manual on my
web-page from time to time, but don't hold your breath.

I notice that you've pulled in a copy of the manual to include in the GAP
documentation.  This is fine, and I'll probably use some of your polishing
in the manual.  However, I see that you've included the chapter regarding
proof tables.  This is interesting stuff, but it'll no longer be in ACE,
since I've decided that it makes more sense to produce a completely 
separate utility to generate/manipulate definition sequences and to extract
proofs from them.  Also, the example given has a slip-up in it somewhere,
and the final proof word given has an extra "A" in it!  (I haven't tracked
this down yet.)  I'd recommend dropping it from the GAP manual.

Now, to your specific points ...

	(I)  

I'm sorry, but I can't duplicate your reported error.  My ACE run is:

ACE 3.000        Tue Jul 11 10:55:39 2000
=========================================
Host information:
  name = flute
gr:abc;
rel:a^2b,b,c^4,(a,c);
start;
INDEX = 8 (a=8 r=9 h=1 n=9; l=3 c=0.00; m=8 t=8)
st;
co/ST: a=8 r=9 h=1 n=9; c=+0.00
pr:-3,3;
co: a=8 r=9 h=1 n=9; c=+0.00
 coset |      a      A      b      B      c      C   order   rep've
-------+-----------------------------------------------------------
     3 |      5      5      3      3      7      1       4   c
q
=========================================
ACE 3.000        Tue Jul 11 10:56:22 2000

Note that representatives are generated by tracing `backwards' through the
  table, so it is guaranteed that all cosets (other than #1) have a 
  non-void representative.
A run with more detailed printout is:

ACE 3.000        Tue Jul 11 10:59:23 2000
=========================================
Host information:
  name = flute
gr:abc;
rel:a^2b,b,c^4,(a,c);
mess:100;
start;
  #-- ACE 3.000: Run Parameters ---
Group Name: G;
Group Generators: abc;
Group Relators: b, aab, (c)^4, ACac;
Subgroup Name: H;
Subgroup Generators: ;
Wo:1000000; Max:166664; Mess:100; Ti:-1; Ho:-1; Loop:0;
As:0; Path:0; Row:1; Mend:0; No:4; Look:0; Com:10;
C:0; R:0; Fi:10; PMod:3; PSiz:256; DMod:4; DSiz:1000;
  #--------------------------------
INDEX = 8 (a=8 r=9 h=1 n=9; l=3 c=0.01; m=8 t=8)
pr:-8;
co: a=8 r=9 h=1 n=9; c=+0.00
 coset |      a      A      b      B      c      C   order   rep've
-------+-----------------------------------------------------------
     1 |      2      2      1      1      5      3
     2 |      1      1      2      2      8      6       2   a
     3 |      6      6      3      3      1      4       4   C
     4 |      7      7      4      4      3      5       2   CC
     5 |      8      8      5      5      4      1       4   c
     6 |      3      3      6      6      2      7       4   aC
     7 |      4      4      7      7      6      8       2   CCa
     8 |      5      5      8      8      7      2       4   ac
st;
co/ST: a=8 r=9 h=1 n=9; c=+0.00
pr:-8;
co: a=8 r=9 h=1 n=9; c=+0.00
 coset |      a      A      b      B      c      C   order   rep've
-------+-----------------------------------------------------------
     1 |      2      2      1      1      3      4
     2 |      1      1      2      2      5      6       2   a
     3 |      5      5      3      3      7      1       4   c
     4 |      6      6      4      4      1      7       4   C
     5 |      3      3      5      5      8      2       4   ac
     6 |      4      4      6      6      2      8       4   aC
     7 |      8      8      7      7      4      3       2   cc
     8 |      7      7      8      8      6      5       2   acc
q
=========================================
ACE 3.000        Tue Jul 11 11:00:08 2000

This all seems OK to me, so I don't know what the story is.  As far as I
can recall, I've never seen this problem in the past.

	(II)

The detection of involutions and the allocation of generators/inverses to
  columns is done whenever `start' is used, and then remains fixed until
  the next such use.
(Note that a `redo' -- due, say, to an augmented relator/subgroup list --
  does *not* change involutions/columns.)
They are `essentially' orthogonal, in the sense that asis is processed 
  first (and this determines which generators are treated as involutions),
  and then the columns are allocated (which may override an involution).
If asis is false (ie, 0, the default), then the relators are first 
  freely/cyclically reduced & sorted, and then any relator of the form 
  "aa", "AA", "a^2" or "A^2" causes `a' to be flagged as an involution.
If asis is true (ie, 1) then the reduction/sorting stage is omitted, and
  only relators of the form "a^2" or "A^2" cause `a' to be flagged as an
  involution.
(Note that, in the relator/subgroup lists, any occurrence of "A", where `a'
  is being treated as an involution, is automatically replaced by an "a".)

Involutions are allocated one column in the table (labelled "a", but 
  really "a/A"), while non-involutions are allocated two adjacent columns,
  generator before its inverse.
We would *like* to allocate the columns for the generators in the order
  given (numeric order for numeric generators and as ordered in the "Gr"
  command for alphabetic generators), but this may not be possible.
The first two columns *must* be a generator/inverse pair or two involutions
  (these columns are used for coincidence handling).

If there is a single generator it is *not* treated as an involution, and
  is allocated to the first two columns.
If there are two or more generators, then we can honour the ordering (and
  the involutions) if the first generator is not an involution, or if both
  the first two are.
A moments thought reveals that the only uncovered case is multiple
  generators, with the first being an involution & the second not.
In this case we simply swap the order of generators #1 & #2 when allocating
  table columns, leaving all other ordering (and *all* involution stuff)
  as requested.

	(III)

The "nc/normal" option takes the current table (which may or may not be
  complete), and traces $g^-1 w g$ and $g w g^-1$ for all group generators
  $g$ and all subgroup generator words $w$.
The trace starts at coset 1 (ie, the subgroup), and we note whether we get
  back to coset 1 or not.
If we do not, then we print out a line of output.
It the true option is set (ie, argument of 1), then the offending conjugate
  is also added to the subgroup generators.
A single pass though the (original) subgroup generators is made, and scans
  which do *not* complete are *not* processed (ie, printed/added).
It is the *users* responsibility to rerun the enumeration (& the "nc"
  option) as necessary until the situation stabilises.

I agree that the printout is misleading, and that some explanation should 
  be given in the manual.
However, you will have to tell me whether or not ACE's behaviour is correct
  ... or, more precisely, if this is the behaviour you want/expect!

	(IV)

The "sc/stabil" option takes the current table (which may or may not be
  complete), and looks for (the requested number of) cosets which
  `stabilise' (that's the term used, don't know if it's correct) the
  subgroup.
A coset $c$ `stabilises' the subgroup $<w1, ..., ws>$ if $c wj = c$ for
  all $1 \le j \le s$.
As for (III), the printout/manual should be reworked, and you'll need to
  tell me if the behaviour is correct/wanted/expected!

Cheers,
Colin.

